@model OptionValueViewModel
@inject CustomIDataProtection protector;
@{
    ViewData["Title"] = "Update Option Value";
}

<div class="container-fluid">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-sm-12">
            <div class="page-title-box">
                <div class="float-end">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Analytics</a></li>
                        <li class="breadcrumb-item">
                            <a asp-action="ListOptionTypes">Option Values</a>
                        </li><!--end nav-item-->
                        <li class="breadcrumb-item active">Update Option Value</li>
                    </ol>
                </div>
                <h4 class="page-title">Update Option Value</h4>
            </div><!--end page-title-box-->
        </div><!--end col-->
    </div>
    <!-- end page title end breadcrumb -->
    <div class="row">
        <div class="col-12 col-lg-8 mx-auto">
            <div class="card">
                <div class="card-body">
                    <form asp-action="EditDonor" asp-route-returnUrl="@protector.Encode(ViewBag.ReturnUrl)" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="OptionValueId" />
                        @if (ViewBag.Message != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <strong>Oh snap!</strong> @ViewBag.Message
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="close"></button>
                            </div>
                        }
                        <div class="form-group row">
                            <div class="col-md-6 mb-3">
                                <label class="col-form-label" asp-for="Name"></label>
                                <input asp-for="Name" type="text" placeholder="Name" class="form-control">
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-6 mb-3">
                                <label class="col-form-label" asp-for="OptionTypeId"></label>
                                <select asp-for="OptionTypeId" asp-items="ViewBag.OptionTypeId" class="form-select" id="default">
                                    <option selected="selected" value="">Please Select Option Type</option>
                                </select>
                                <span asp-validation-for="OptionTypeId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-de-primary btn-sm text-light px-4 mt-3 mb-0">Save</button>
                            <a class="btn btn-de-danger btn-sm text-light px-4 mt-3 mb-0" asp-action="ListOptionValues">Cancel</a>
                        </div>
                    </form>
                </div> <!--end card-body-->
            </div><!--end card-->
        </div> <!--end col-->
    </div><!--end row-->

</div><!-- container -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}